{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Blue-Diamond-App/src/component/updatepassword/updatepassword.js\";\nimport React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/signup.service';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport '../login/login.css';\n\nclass UpdatePassword extends React.Component {\n  /** First Constructor Call */\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let emailError = \"\";\n      let oldPasswordError = \"\";\n      let newPasswordError = \"\";\n      let confirmPasswordError = \"\";\n\n      if (!this.state.userName) {\n        userNameError = \"please enter username\";\n      }\n\n      if (!this.state.password) {\n        passwordError = \"please enter password\";\n      }\n\n      if (userNameError || passwordError) {\n        this.setState({\n          userNameError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      email: '',\n      emailError: '',\n      oldPassword: '',\n      oldPasswordError: '',\n      newPassword: '',\n      newPasswordError: '',\n      confirmPassword: '',\n      confirmPasswordError: ''\n    };\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    this.UpdatePassword = this.UpdatePassword.bind(this);\n  }\n  /** onChange event  */\n\n\n  handleChangeEvent(event) {\n    event.preventDefault();\n    const state = this.state;\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n\n  /** Update Password */\n  UpdatePassword() {\n    const obj = {\n      email: this.state.email,\n      oldPassword: this.state.oldPassword,\n      newPassword: this.state.newPassword,\n      confirmPassword: this.state.confirmPassword\n    };\n    API.UpdatePasswordUser(obj).then(findresponse => {\n      console.log(\"response==\", findresponse);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"UpdatePassword\"), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"defaultFormRegisterEmailEx1\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Your old password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"oldPassword\",\n      id: \"defaultFormRegisterPasswordEx2\",\n      className: \"form-control\",\n      value: this.state.oldPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Your new password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"newPassword\",\n      id: \"defaultFormRegisterPasswordEx3\",\n      className: \"form-control\",\n      value: this.state.newPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Your confirm password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      id: \"defaultFormRegisterPasswordEx4\",\n      className: \"form-control\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.UpdatePassword,\n      disabled: !this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Update Password\"))))));\n  }\n\n}\n\nexport default UpdatePassword;","map":{"version":3,"sources":["/var/www/html/Blue-Diamond-App/src/component/updatepassword/updatepassword.js"],"names":["React","API","MDBContainer","MDBRow","MDBCol","MDBBtn","UpdatePassword","Component","constructor","props","validate","emailError","oldPasswordError","newPasswordError","confirmPasswordError","state","userName","userNameError","password","passwordError","setState","email","oldPassword","newPassword","confirmPassword","handleChangeEvent","bind","event","preventDefault","target","name","value","obj","UpdatePasswordUser","then","findresponse","console","log","catch","status","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/signup.service';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport '../login/login.css';\n\nclass UpdatePassword extends React.Component {\n\n    /** First Constructor Call */\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            emailError:'',\n            oldPassword: '',\n            oldPasswordError:'',\n            newPassword: '',\n            newPasswordError:'',\n            confirmPassword: '',\n            confirmPasswordError:''\n\n        }\n        this.handleChangeEvent = this.handleChangeEvent.bind(this);\n        this.UpdatePassword = this.UpdatePassword.bind(this);\n    }\n\n\n    /** onChange event  */\n    handleChangeEvent(event) {\n        event.preventDefault();\n        const state = this.state\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    validate = () => {\n        let emailError = \"\";\n        let oldPasswordError = \"\";\n        let newPasswordError = \"\";\n        let confirmPasswordError = \"\";\n    \n        if (!this.state.userName) {\n          userNameError = \"please enter username\";\n        }\n    \n        if (!this.state.password) {\n          passwordError = \"please enter password\";\n        }\n    \n        if (userNameError || passwordError) {\n          this.setState({ userNameError, passwordError });\n          return false;\n        }\n        return true;\n      };\n    \n\n    /** Update Password */\n    UpdatePassword() {\n        const obj = {\n            email: this.state.email,\n            oldPassword: this.state.oldPassword,\n            newPassword: this.state.newPassword,\n            confirmPassword: this.state.confirmPassword\n        }\n        API.UpdatePasswordUser(obj).\n            then((findresponse) => {\n                console.log(\"response==\", findresponse);\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <form>\n                            <p className=\"h4 text-center mb-4\">UpdatePassword</p>\n                            <label className=\"grey-text\">\n                                email\n                                </label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"defaultFormRegisterEmailEx1\"\n                                className=\"form-control\"\n                                value={this.state.email}\n                                onChange={this.handleChangeEvent}\n\n                            />\n                            <br />\n                            <label\n\n                                className=\"grey-text\"\n                            >\n                                Your old password\n                                </label>\n                            <input\n                                type=\"password\"\n                                name=\"oldPassword\"\n                                id=\"defaultFormRegisterPasswordEx2\"\n                                className=\"form-control\"\n                                value={this.state.oldPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <label\n\n                                className=\"grey-text\"\n                            >\n                                Your new password\n                                 </label>\n                            <input\n                                type=\"password\"\n                                name=\"newPassword\"\n                                id=\"defaultFormRegisterPasswordEx3\"\n                                className=\"form-control\"\n                                value={this.state.newPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <label\n\n                                className=\"grey-text\"\n                            >\n                                Your confirm password\n                                </label>\n                            <input\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                id=\"defaultFormRegisterPasswordEx4\"\n                                className=\"form-control\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" onClick={this.UpdatePassword} disabled={!this.state.email}>\n                                    Update Password\n                                    </MDBBtn>\n                            </div>\n                        </form>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default UpdatePassword;\n"]},"metadata":{},"sourceType":"module"}