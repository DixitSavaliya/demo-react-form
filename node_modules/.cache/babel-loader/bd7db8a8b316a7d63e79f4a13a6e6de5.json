{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../config';\nexport default {\n  /** User Signup */\n  Signup: obj => {\n    return axios.post(config.baseApiUrl + \"api/signup\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n\n  /** User Login */\n  Login: obj => {\n    console.log(\"obj==\", obj);\n    return axios.post(config.baseApiUrl + \"api/login\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n\n  /** Forgot Password */\n  ForgotPassword: obj => {\n    return axios.post(config.baseApiUrl + \"api/resetPassword\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  UpdatePasswordUser: obj => {\n    const Token = localStorage.getItem('token');\n    const headers = {\n      'content-type': 'application/x-www-form-urlencoded',\n      'Authorization': 'JWT fefege...',\n      'token': Token\n    };\n    return axios.post(config.baseApiUrl + \"api/updatePassword\", {\n      \"headers\": headers\n    }, obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  ResetPassword: (obj, hash) => {\n    return axios.post(config.baseApiUrl + \"api/email-verify/:hash\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n};","map":{"version":3,"sources":["/var/www/html/Blue-Diamond-App/src/service/signup.service.js"],"names":["axios","config","Signup","obj","post","baseApiUrl","then","response","catch","status","message","Login","console","log","ForgotPassword","UpdatePasswordUser","Token","localStorage","getItem","headers","ResetPassword","hash"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,eAAe;AACX;AACAC,EAAAA,MAAM,EAAGC,GAAD,IAAS;AACb,WAAOH,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACI,UAAP,GAAoB,YAA/B,EAA6CF,GAA7C,EACFG,IADE,CACGC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACH,KAHE,EAGAC,KAHA,CAGM;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAHN,CAAP;AAIH,GAPU;;AAQX;AACAC,EAAAA,KAAK,EAAGR,GAAD,IAAS;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,GAArB;AACA,WAAOH,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACI,UAAP,GAAoB,WAA/B,EAA4CF,GAA5C,EACFG,IADE,CACGC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACH,KAHE,EAGAC,KAHA,CAGM;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAHN,CAAP;AAIH,GAfU;;AAgBX;AACAI,EAAAA,cAAc,EAAGX,GAAD,IAAS;AACrB,WAAOH,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACI,UAAP,GAAoB,mBAA/B,EAAoDF,GAApD,EACFG,IADE,CACGC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACH,KAHE,EAGAC,KAHA,CAGM;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAHN,CAAP;AAIH,GAtBU;AAwBXK,EAAAA,kBAAkB,EAAGZ,GAAD,IAAS;AAEzB,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG;AACZ,sBAAgB,mCADJ;AAEZ,uBAAiB,eAFL;AAGZ,eAASH;AAHG,KAAhB;AAMA,WAAOhB,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACI,UAAP,GAAoB,oBAA/B,EAAqD;AAAE,iBAAWc;AAAb,KAArD,EAA6EhB,GAA7E,EACFG,IADE,CACGC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACH,KAHE,EAGAC,KAHA,CAGM;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAHN,CAAP;AAIH,GArCU;AAuCXU,EAAAA,aAAa,EAAE,CAACjB,GAAD,EAAKkB,IAAL,KAAc;AACzB,WAAOrB,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACI,UAAP,GAAoB,wBAA/B,EAAyDF,GAAzD,EACFG,IADE,CACGC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACH,KAHE,EAGAC,KAHA,CAGM;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAHN,CAAP;AAIH;AA5CU,CAAf","sourcesContent":["import axios from 'axios';\nimport { config } from '../config';\n\nexport default {\n    /** User Signup */\n    Signup: (obj) => {\n        return axios.post(config.baseApiUrl + \"api/signup\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n    /** User Login */\n    Login: (obj) => {\n        console.log(\"obj==\", obj);\n        return axios.post(config.baseApiUrl + \"api/login\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n    /** Forgot Password */\n    ForgotPassword: (obj) => {\n        return axios.post(config.baseApiUrl + \"api/resetPassword\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    UpdatePasswordUser: (obj) => {\n\n        const Token = localStorage.getItem('token');\n        const headers = {\n            'content-type': 'application/x-www-form-urlencoded',\n            'Authorization': 'JWT fefege...',\n            'token': Token\n        }\n\n        return axios.post(config.baseApiUrl + \"api/updatePassword\", { \"headers\": headers }, obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    ResetPassword: (obj,hash) => {\n        return axios.post(config.baseApiUrl + \"api/email-verify/:hash\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    }\n}"]},"metadata":{},"sourceType":"module"}